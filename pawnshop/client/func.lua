---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by KraKss.
--- DateTime: 09/06/2023 22:08
---

local function KeyboardInput(TextEntry, ExampleText, MaxStringLength)
    AddTextEntry('FMMC_KEY_TIP1', TextEntry)
    DisplayOnscreenKeyboard(1, "FMMC_KEY_TIP1", "", ExampleText, "", "", "", MaxStringLength)
    blockinput = true
    while UpdateOnscreenKeyboard() ~= 1 and UpdateOnscreenKeyboard() ~= 2 do
        Citizen.Wait(0)
    end
    if UpdateOnscreenKeyboard() ~= 2 then
        local result = GetOnscreenKeyboardResult()
        Citizen.Wait(500)
        blockinput = false
        return result
    else
        Citizen.Wait(500)
        blockinput = false
        return nil
    end
end

function pawnshop:createMenu()
    self.mainMenu = RageUI.CreateMenu("", self.blipData.name)
    self.buyMenu = RageUI.CreateSubMenu(self.mainMenu, "", "Acheter un objet")
    self.sellMenu = RageUI.CreateSubMenu(self.mainMenu, "", "Créer une offre")
    self.currentlySellingMenu = RageUI.CreateSubMenu(self.sellMenu, "", "Vos objets en vente")
    TriggerServerEvent("KraKss:pawnshop:getInSellItems")
end

function pawnshop:drawMenu()
    RageUI.IsVisible(self.mainMenu, function()
        RageUI.Button("Vendre un objet", nil, { RightLabel = "→" }, true, {
        }, self.sellMenu)

        RageUI.Button("Acheter un objet", nil, { RightLabel = "→" }, true, {
        }, self.buyMenu)
    end)

    RageUI.IsVisible(self.sellMenu, function()
        self:createSellMenu()
    end)

    RageUI.IsVisible(self.currentlySellingMenu, function()
        self:createCurrentlySellingMenu()
    end)

    RageUI.IsVisible(self.buyMenu, function()
        self:createBuyMenu()
    end)
end

function pawnshop:createSellMenu()
    RageUI.Button(("Vos objets en vente (~b~%i~s~)"):format(self.playerItemsInSell and #self.playerItemsInSell or 0), nil, {RightLabel = "→"}, true, {
    }, self.currentlySellingMenu)
    RageUI.Line()
    for _, v in pairs(ESX.GetPlayerData().inventory) do
        if (v.count > 0 and (not string.match(v.name, "weapon_"))) then
            RageUI.Button(("(x~b~%s~s~) %s"):format(v.count, v.label), v.description, {}, true, {
                onSelected = function()
                    local amount = KeyboardInput("Quantité : ", "", 9)
                    local price = tonumber(amount) and KeyboardInput("Prix à l'unité : ", "", 9)
                    local desc = tonumber(price) and KeyboardInput("Description : (250 caractères)", "", 250)
                    if (tonumber(amount) and tonumber(amount) > 0 and tonumber(price)) then
                        TriggerServerEvent("KraKss:pawnshop:sellItem", v.name, math.round(tonumber(amount)), price, desc)
                    else
                        ESX.ShowNotification("[~r~ERROR~s~]\nMontant ou prix invalide")
                    end
                end
            })
        end
    end
end

function pawnshop:noItemsButton()
    RageUI.Button("Aucun objet en vente", nil, {}, false, {})
end

function pawnshop:createCurrentlySellingMenu()
    if (#self.playerItemsInSell == 0) then
        pawnshop:noItemsButton()
    else
        for _,v in pairs(self.playerItemsInSell) do
            RageUI.Button(("(x~b~%s~s~) %s"):format(v.amount, v.label), ("Appuyez sur [~b~ENTER~s~] pour supprimer l'objet de votre liste de vente\nDescription : %s"):format(v.description ~= "" and v.description or "~r~Aucune"), {RightLabel = ("~g~%.0f$"):format(v.price)}, true, {
                onSelected = function()
                    TriggerServerEvent("KraKss:pawnshop:removeItemFromSell", v.id)
                end
            })
        end
    end
end

function pawnshop:createBuyMenu()
    RageUI.Separator(("Taxe du vendeur : ~b~%s%%"):format((self.resellTaxe - 1) * 100))

    if (#self:fetchStorage() == 0) then
        pawnshop:noItemsButton()
    else
        for _, v in pairs(self:fetchStorage()) do
            RageUI.Button(("(x~b~%s~s~) %s"):format(v.amount, v.label), ("Prix Unitaire : ~g~%.0f$~s~%s\nDescription : ~b~%s"):format(v.price, v.amount > 1 and ("\nPrix Total : ~g~%.0f$~s~"):format(v.price * v.amount) or "",v.description ~= "" and v.description or "~r~Aucune"), {RightLabel = ("~g~%.0f$~s~"):format(v.price)}, true, {
                onSelected = function()
                    local amount = KeyboardInput("Quantité : ", "", 9)
                    if (tonumber(amount) and tonumber(amount) > 0) then
                        TriggerServerEvent("KraKss:pawnshop:buyItem", v.name, math.round(tonumber(amount)), v.id)
                    else
                        ESX.ShowNotification("[~r~ERROR~s~]\nMontant invalide")
                    end
                end
            })
        end
    end
end

function pawnshop:createBlip()
    local blip = AddBlipForCoord(self.markerPos)
    SetBlipSprite(blip, self.blipData.sprite)
    SetBlipDisplay(blip, 2)
    SetBlipScale(blip, self.blipData.scale)
    SetBlipColour(blip, self.blipData.color)
    SetBlipAsShortRange(blip, true)
    BeginTextCommandSetBlipName("STRING")
    AddTextComponentString(self.blipData.name)
    EndTextCommandSetBlipName(blip)
end

function pawnshop:createPed()
    RequestModel(GetHashKey(self.pedModel))
    while not HasModelLoaded(GetHashKey(self.pedModel)) do
        Wait(1)
    end

    local ped <const> = CreatePed(4, GetHashKey(self.pedModel), self.pedPos.x, self.pedPos.y, self.pedPos.z - 1.0, self.pedHeading, false, true)
    SetEntityInvincible(ped, true)
    SetBlockingOfNonTemporaryEvents(ped, true)
    FreezeEntityPosition(ped, true)
end