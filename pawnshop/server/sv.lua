---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by KraKss.
--- DateTime: 09/06/2023 21:08
---

function pawnshop:saveStorage(file)
    SaveResourceFile(GetCurrentResourceName(), self.JSON_PATH, json.encode(file, { indent = true }), -1)
    TriggerClientEvent("KraKss:pawnshop:updateStorage", -1, self:fetchStorage())
end

function pawnshop:getInSellItems(license)
    local file <const> = self:fetchStorage()
    local items = {}

    for _,v in pairs(file) do
        if (v.license == license) then
            table.insert(items, v)
        end
    end

    return (items)
end

function pawnshop:sendToClientItems(target, license)
    TriggerClientEvent("KraKss:pawnshop:receiveInSellItems", target, pawnshop:getInSellItems(license))
end

function pawnshop:getAmountItemsByUser(license)
    local file <const> = self:fetchStorage()
    local amount = 0

    for _,v in pairs(file) do
        if (v.license == license) then
            amount = amount + 1
        end
    end

    return (amount)
end

function pawnshop:userIsSeller(userLicense, sellerlicense)
    return (userLicense == sellerlicense)
end

function pawnshop:createItem(name, label, price, amount, description, license)
    local file = self:fetchStorage()
    table.insert(file, self:constructorItem(name, label, price, amount, description, license))

    self:updateStorage(file)
    self:saveStorage(file)
end

function pawnshop:removeItem(id, amount)
    local file = self:fetchStorage()

    for k,v in pairs(file) do
        if (v.id == id and v.amount >= amount) then
            v.amount = v.amount - amount
        end

        if (v.amount == 0) then
            table.remove(file, k)
        end
    end

    self:updateStorage(file)
    self:saveStorage(file)
end

function pawnshop:userOnline(license)
    local players = ESX.GetPlayers()

    for _,v in pairs(players) do
        local xPlayer = ESX.GetPlayerFromId(v)
        if (xPlayer.getIdentifier() == license) then
            return (true)
        end
    end

    return (false)
end

function pawnshop:addMoneyToSeller(itemId, license, amount)
    local sellPrice <const> = pawnshop:getMoneyFromSell(itemId, amount)
    if (pawnshop:userOnline(pawnshop:getSellerLicense(itemId))) then
        local xSeller <const> = ESX.GetPlayerFromIdentifier(pawnshop:getSellerLicense(itemId))
        xSeller.addAccountMoney(pawnshop.payment, sellPrice)
        TriggerClientEvent("esx:showNotification", xSeller.source, ("[~g~INFO~s~]\nVous avez reçu ~g~%.0f$~s~ de la vente de ~b~%s x%s~s~"):format(sellPrice, pawnshop:getItemLabel(itemId), amount))
        pawnshop:sendToClientItems(xSeller.source, license)
    else
        MySQL.Async.fetchAll("SELECT * FROM `users` WHERE `identifier` = @id", {
            ["@id"] = license
        }, function(result)
            if (result) then
                local accounts = {
                    ["bank"] = json.decode(result[1].accounts)["bank"] + sellPrice,
                    ["black_money"] = json.decode(result[1].accounts)["black_money"],
                    ["money"] = json.decode(result[1].accounts)["money"]
                }

                MySQL.Async.execute("UPDATE `users` SET `accounts` = @accounts WHERE `identifier` = @id", {
                    ["@accounts"] = json.encode(accounts),
                    ["@id"] = license
                }, function(rowChanged)
                    if (rowChanged) then
                        print(("[^1PAWNSHOP^0] - ^3%s^0 a reçu ^2%s$^0"):format(license, amount))
                    end
                end)
            end
        end)
    end
end

RegisterNetEvent("KraKss:pawnshop:getInSellItems", function()
    local _src <const> = source
    local xPlayer <const> = ESX.GetPlayerFromId(_src)
    if (not xPlayer) then return end

    pawnshop:sendToClientItems(_src, xPlayer.getIdentifier())
end)

RegisterNetEvent("KraKss:pawnshop:removeItemFromSell", function(itemId)
    local _src <const> = source
    local xPlayer <const> = ESX.GetPlayerFromId(_src)
    local license <const> = xPlayer.getIdentifier()
    if (not xPlayer) then return end

    if (not pawnshop:userIsSeller(license, pawnshop:getSellerLicense(itemId))) then
        TriggerClientEvent("esx:showNotification", _src, ("[~r~ERROR~s~]\nVous n'êtes pas le vendeur de l'objet ~b~%s~s~"):format(pawnshop:getItemLabel(itemId)))
        return
    end

    TriggerClientEvent("esx:showNotification", _src, ("[~g~INFO~s~]\nVous avez supprimé l'objet ~b~%s~s~ de votre liste de vente"):format(pawnshop:getItemLabel(itemId)))
    local amount <const> = pawnshop:getItemAmount(itemId)
    xPlayer.addInventoryItem(pawnshop:getItemName(itemId), amount)
    pawnshop:removeItem(itemId, amount)
    pawnshop:sendToClientItems(_src, license)
end)

RegisterNetEvent("KraKss:pawnshop:sellItem", function(name, amount, price, description)
    local _src <const> = source
    local xPlayer <const> = ESX.GetPlayerFromId(_src)
    local sellerLicense <const> = xPlayer.getIdentifier()
    local item <const> = xPlayer.getInventoryItem(name)

    if (not item) then return end

    if (item.count < tonumber(amount)) then
        TriggerClientEvent("esx:showNotification", _src, ("[~r~ERROR~s~]\nVous n'avez pas assez de ~b~%s~s~ dans votre inventaire"):format(item.label))
        return
    end

    if (pawnshop:getAmountItemsByUser(sellerLicense) >= pawnshop.maxItemsPerUser) then
        TriggerClientEvent("esx:showNotification", _src, ("[~r~ERROR~s~]\nVous avez atteint la limite d'objet en vente"))
        return
    end

    pawnshop:createItem(item.name, item.label, price, amount, description, sellerLicense)
    xPlayer.removeInventoryItem(name, amount)
    TriggerClientEvent("esx:showNotification", _src, ("[~g~INFO~s~]\nVous avez mis en vente ~b~%sx~s~ ~b~%s~s~ pour ~g~$%s~s~"):format(amount, item.label, pawnshop:getItemPrice(pawnshop:getLastId())))
    pawnshop:sendToClientItems(_src, sellerLicense)
end)

RegisterNetEvent("KraKss:pawnshop:buyItem", function(name, amount, itemId)
    local _src <const> = source
    local xPlayer <const> = ESX.GetPlayerFromId(_src)
    local found = false

    for _,v in pairs(pawnshop:fetchStorage()) do
        if (v.name == name and amount <= v.amount) then
            found = true
        end
    end

    if (not found) then
        TriggerClientEvent("esx:showNotification", _src, "[~r~ERROR~s~]\nIl n'y a pas assez d'item en vente")
        return
    end

    if (pawnshop:userIsSeller(xPlayer.getIdentifier(), pawnshop:getSellerLicense(itemId))) then
        TriggerClientEvent("esx:showNotification", _src, ("[~r~ERROR~s~]\nVous ne pouvez pas acheter votre propre objet ~b~%s~s~"):format(pawnshop:getItemLabel(itemId)))
        return
    end

    local playerMoney = xPlayer.getAccount(pawnshop.payment, xPlayer).money

    if (playerMoney <= (pawnshop:getItemPrice(itemId) * amount)) then
        TriggerClientEvent("esx:showNotification", _src, "[~r~ERROR~s~]\nVous n'avez pas assez d'argent")
        return
    end

    if (not xPlayer.canCarryItem(tostring(name), tonumber(amount))) then
        TriggerClientEvent("esx:showNotification", _src, "[~r~ERROR~s~]\nVous n'avez pas assez de place dans votre inventaire")
        return
    end

    xPlayer.removeAccountMoney(pawnshop.payment, pawnshop:getItemPrice(itemId) * amount)
    xPlayer.addInventoryItem(name, amount)
    TriggerClientEvent("esx:showNotification", _src, ("[~g~INFO~s~]\nVous avez acheté ~b~%sx %s ~s~pour ~g~%.0f$~s~"):format(amount, pawnshop:getItemLabel(itemId), tostring(pawnshop:getItemPrice(itemId) * amount)))

    pawnshop:addMoneyToSeller(itemId, pawnshop:getSellerLicense(itemId), amount)
    pawnshop:removeItem(itemId, amount)
end)

print("[^1PAWNSHOP^0] - Script by ^5@KraKss^0 \nCreated for ^1VIBE-DEV^0 \n^5discord.gg/nF9aHrSJh6^0")